

(function() {



  //  localStorage.AlgerPort ='7000'


   

    // Main function to run the script
    function runScript() {
        'use strict';
          'use strict';
localStorage.pay = 'DoIt'; // refrech
localStorage.noti = 'OK'; // new notification in select date
localStorage.code = 'bls'; // get the encrypted selfie code
// var VersionType = localStorage.versiontype || "New";
   // console.log('Tampermonkey script is running');
var port = localStorage.AlgerPort;

       const scriptMappings = [

        { includes: 'https://algeria.blsspainglobal.com/', urls: ['http://localhost:'+ port +'/fetch-script/1','http://localhost:'+ port +'/fetch-script/28']},

        { includes: '/login', urls: ['http://localhost:'+ port +'/fetch-script/2'] },
       { includes: '/Login', urls: ['http://localhost:'+ port +'/fetch-script/2'] },
       { includes: '/LogIn', urls: ['http://localhost:'+ port +'/fetch-script/2'] },
       { includes: '/logIn', urls: ['http://localhost:'+ port +'/fetch-script/2'] },
       { includes: '/DZA/NewCaptcha/LoginCaptcha', urls: ['http://localhost:'+ port +'/fetch-script/3'] },

       { includes: 'DZA/newcaptcha/logincaptcha', urls: ['http://localhost:'+ port +'/fetch-script/3'] },
       { includes: 'changepassword', urls: ['http://localhost:'+ port +'/fetch-script/4'] },
            { includes: 'DataProtectionEmailSent', urls: ['http://localhost:'+ port +'/fetch-script/5'] },
          { includes: 'dataprotectionemailaccept', urls: ['http://localhost:'+ port +'/fetch-script/6'] },
         { includes: 'appointmentcaptcha', urls: ['http://localhost:'+ port +'/fetch-script/7'] },
      { includes: 'AppointmentCaptcha', urls: ['http://localhost:'+ port +'/fetch-script/7'] },
                      { includes: 'visatype?data', urls: ['http://localhost:'+ port +'/fetch-script/8','http://localhost:'+ port +'/fetch-script/10'] },
  { includes: 'VisaType?data', urls: ['http://localhost:'+ port +'/fetch-script/8','http://localhost:'+ port +'/fetch-script/10','http://localhost:'+ port +'/fetch-script/14'] },
 { includes: 'ApplicantSelection', urls: ['http://localhost:'+ port +'/fetch-script/11','http://localhost:'+ port +'/fetch-script/13',
                                          'http://localhost:'+ port +'/fetch-script/112'] },
          { includes: 'SlotSelection', urls: ['http://localhost:'+ port +'/fetch-script/N5','http://localhost:'+ port +'/fetch-script/N6'] },
          { includes: 'RegisterUser', urls: ['http://localhost:'+ port +'/fetch-script/12'] },


    ];
;

        const currentUrl = window.location.href;
        let matchedScriptUrls = [];

        // Match the current URL with the script mappings
        for (const mapping of scriptMappings) {
            if (currentUrl.includes(mapping.includes)) {
                matchedScriptUrls = matchedScriptUrls.concat(mapping.urls);
            }
        }

        // If matching scripts are found, fetch and execute them
        if (matchedScriptUrls.length > 0) {
            matchedScriptUrls.forEach(url => fetchAndExecuteScript(url));
        } else {
            console.log('No matching URL found for current page.');
        }
    

    // Function to fetch and execute a script
    function fetchAndExecuteScript(url) {
        fetch(url)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(scriptContent => {
                try {
                    eval(scriptContent);
                    console.log(`Script executed successfully from ${url}`);
                } catch (error) {
                    console.error(`Error executing script from ${url}:`, error);
                }
            })
            .catch(error => {
                console.error(`Error fetching script from ${url}:`, error);
                setTimeout(() => fetchAndExecuteScript(url), 2000); // Retry after 2 seconds
            });
    }
    }

runScript();

 // Fetch the username from the server
    fetch('http://localhost:'+ localStorage.AlgerPort +'/getUsername')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log(data.username);
            UserId = data.username;

            // Store the value in localStorage
            localStorage.setItem('UserId', data.username);
            console.log('UserId stored in localStorage:', data.username);

            // Proceed if UserId matches the localStorage value
            if(localStorage.getItem('UserId') === UserId) {
               // runScript();
            } else {
                console.error('UserId mismatch or not available.');
            }
        })
        .catch(error => {
            console.error('Error fetching username:', error);
        });
        

})();















